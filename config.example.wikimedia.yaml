render_api: &render_api
  x-modules:
    - spec:
        info:
          version: 1.0.0-beta
          title: ServiceWorker render proxy service
          description: >
            Server-side ServiceWorker execution for pre-rendering &
            support of clients without ServiceWorker support.

          termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
          contact:
            name: the Wikimedia Services team
            url: http://mediawiki.org/wiki/Wikimedia_Services
          license:
            name: Apache2
            url: http://www.apache.org/licenses/LICENSE-2.0
        x-sub-request-filters:
          - type: default
            name: http
            options:
              allow:
                - pattern: /^https?:\/\/[a-zA-Z0-9\.]+\/w\/api\.php/
                  forward_headers: true
                - pattern: /^https?:\/\/parsoid-beta.wmflabs.org.+/
                  forward_headers: true
                - pattern: /^https?:\/\//
        x-modules:
          - path: ./v1/sw_proxy.js
            options:
              # Try to load a serviceworker config using the following
              # path patterns for each domain:
              registration:
                paths:
                  - /api/rest_v1/feed/serviceworkers
            refresh_interval_seconds: 120

spec_root: &spec_root
  paths:
    # global domain
    /{domain}/{api:v1}: *render_api

    # A robots.txt to make sure that the content isn't indexed.
    /robots.txt:
      get:
        x-request-handler:
          - static:
              return:
                status: 200
                headers:
                  content-type: text/plain
                body: |
                  User-agent: *
                  Allow: /*/v1/?doc
                  Disallow: /

# Finally, a standard service-runner config.
services:
  - name: serviceworker-proxy
    module: hyperswitch
    conf: 
      port: 8934
      spec: *spec_root
      salt: secret
      user_agent: ServiceWorker Proxy

logging:
  level: info
  #streams:
  #- type: gelf
  #  host: <%= @logstash_host %>
  #  port: <%= @logstash_port %>

metrics:
  type: statsd
  host: localhost
  port: 8125
  batch: true

ratelimiter:
  type: kademlia
  # Cluster nodes
  seeds:
    # Port 3050 used by default
    - 127.0.0.1
